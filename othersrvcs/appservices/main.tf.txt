terraform {
  required_version = ">= 1.5.0" # Ensure compatibility with the latest stable Terraform version
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = ">= 3.74.0" # Use the latest stable version of the AzureRM provider
    }
  }
}

provider "azurerm" {
  features {}
  subscription_id = var.subscription_id
}

resource "random_string" "unique_suffix" {
  length  = 8
  special = false
  upper   = false
}


# Resource Group
resource "azurerm_resource_group" "appservice_rg" {
  name     = var.resource_group_name
  location = var.location

  tags = {
    Environment = var.environment
    Owner       = var.owner
  }
}

# Virtual Network
resource "azurerm_virtual_network" "vnet" {
  name                = var.vnet_name
  location            = var.location
  resource_group_name = azurerm_resource_group.appservice_rg.name
  address_space       = ["10.0.0.0/16"]

  tags = {
    Environment = var.environment
    Owner       = var.owner
  }

  depends_on = [
    azurerm_resource_group.appservice_rg
  ]
}

# Subnet
resource "azurerm_subnet" "subnet" {
  name                 = var.subnet_name
  resource_group_name  = azurerm_resource_group.appservice_rg.name
  virtual_network_name = azurerm_virtual_network.vnet.name
  address_prefixes     = [var.subnet_address]

  delegation {
    name = var.delegation_name
    service_delegation {
      name = "Microsoft.Web/hostingEnvironments"
      actions = [
        "Microsoft.Network/virtualNetworks/subnets/action"
      ]
    }
  }

  depends_on = [
    azurerm_virtual_network.vnet
  ]
}

# App Service Environment v3 (ASEv3)
resource "azurerm_app_service_environment_v3" "ase" {
  name                = "ase-${var.environment}-${var.location}-${random_string.unique_suffix.result}"
  resource_group_name = var.resource_group_name
  subnet_id           = azurerm_subnet.subnet.id

  zone_redundant = true # Enable zone redundancy for high availability

  internal_load_balancing_mode = var.ilb_mode

  tags = {
    Environment = var.environment
    Owner       = var.owner
  }
}

# Private DNS Zone
resource "azurerm_private_dns_zone" "private_dns_zone" {
  name                = var.private_zone_name
  resource_group_name = azurerm_resource_group.appservice_rg.name

  lifecycle {
    prevent_destroy = false
  }

  depends_on = [
    azurerm_resource_group.appservice_rg
  ]
}

# Private DNS Zone Virtual Network Link
resource "azurerm_private_dns_zone_virtual_network_link" "vnet_link" {
  name                  = "vnetLink"
  private_dns_zone_name = azurerm_private_dns_zone.private_dns_zone.name
  resource_group_name   = var.resource_group_name
  virtual_network_id    = var.virtual_network_id
  registration_enabled  = false

  lifecycle {
    prevent_destroy = false # Allow destruction of this resource
  }
}

# Private DNS Zone A Records
resource "azurerm_private_dns_a_record" "dns_a_record" {
  name                = "*"
  zone_name           = azurerm_private_dns_zone.private_dns_zone.name
  resource_group_name = var.resource_group_name
  ttl                 = 3600
  records             = [azurerm_app_service_environment_v3.ase.internal_inbound_ip_addresses[0]]

  depends_on = [
    azurerm_private_dns_zone.private_dns_zone,
    azurerm_app_service_environment_v3.ase
  ]
}

resource "azurerm_private_dns_a_record" "dns_a_record_scm" {
  name                = "*.scm"
  zone_name           = azurerm_private_dns_zone.private_dns_zone.name
  resource_group_name = var.resource_group_name
  ttl                 = 3600
  records             = [azurerm_app_service_environment_v3.ase.internal_inbound_ip_addresses[0]]

  depends_on = [
    azurerm_private_dns_zone.private_dns_zone,
    azurerm_app_service_environment_v3.ase
  ]
}

resource "azurerm_private_dns_a_record" "dns_a_record_root" {
  name                = "@"
  zone_name           = azurerm_private_dns_zone.private_dns_zone.name
  resource_group_name = var.resource_group_name
  ttl                 = 3600
  records             = [azurerm_app_service_environment_v3.ase.internal_inbound_ip_addresses[0]]

  depends_on = [
    azurerm_private_dns_zone.private_dns_zone,
    azurerm_app_service_environment_v3.ase
  ]
}

# App Service Plan (Server Farm)
resource "azurerm_service_plan" "appservice_plan" {
  name                = var.hosting_plan_name
  location            = var.location
  resource_group_name = var.server_farm_resource_group

  os_type  = "Linux" # Specify the OS type (Linux or Windows)
  sku_name = var.sku_code # Use the variable for SKU size and tier (e.g., P1v2)

  tags = {
    Environment = var.environment
    Owner       = var.owner
  }
}

# App Service (Web App)
resource "azurerm_linux_web_app" "appservice" {
  name                = "example-app-service"
  resource_group_name = azurerm_resource_group.appservice_rg.name
  location            = azurerm_resource_group.appservice_rg.location
  service_plan_id     = azurerm_service_plan.appservice_plan.id

  site_config {
    minimum_tls_version = "1.2" # Example of another valid site_config argument
  }

  app_settings = {
    "APP_SETTING_KEY" = "APP_SETTING_VALUE"
    "ANOTHER_KEY"     = "ANOTHER_VALUE"
  }


  identity {
    type = "SystemAssigned"
  }

  tags = {
    Environment = var.environment
    Owner       = var.owner
  }
}

# Key Vault for secure storage of sensitive information
resource "azurerm_key_vault" "key_vault" {
  name                = "${var.name}-kv"
  location            = var.location
  resource_group_name = var.resource_group_name
  tenant_id           = var.tenant_id

  sku_name = "standard"

  access_policy {
    tenant_id = var.tenant_id
    object_id = azurerm_linux_web_app.appservice.identity[0].principal_id
    secret_permissions = ["get", "list"]
  }

  tags = {
    Environment = var.environment
    Owner       = var.owner
  }

  depends_on = [
    azurerm_linux_web_app.appservice
  ]
}

resource "azurerm_key_vault_secret" "docker_registry_password" {
  name         = "docker-registry-password"
  value        = var.docker_registry_password
  key_vault_id = azurerm_key_vault.key_vault.id

  depends_on = [
    azurerm_key_vault.key_vault
  ]
}

