# Provider Configuration
provider "azurerm" {
  features {}
}

# Resource Group
resource "azurerm_resource_group" "firewall_rg" {
  name     = var.resource_group_name
  location = var.location
}

# Virtual Network
resource "azurerm_virtual_network" "vnet_firewall" {
  name                = var.virtual_network_name
  resource_group_name = azurerm_resource_group.firewall_rg.name
  address_space       = var.address_space

  tags = var.tags
}

# Subnet for Azure Firewall
resource "azurerm_subnet" "subnet_firewall" {
  name                 = var.subnet_name
  resource_group_name  = azurerm_resource_group.firewall_rg.name
  virtual_network_name = azurerm_virtual_network.vnet_firewall.name
  address_prefixes     = var.subnet_address_prefix

  enforce_private_link_endpoint_network_policies = true
}

# Public IP for Azure Firewall
resource "azurerm_public_ip" "pip_firewall" {
  name                = "${var.firewall_name}-pip"
  resource_group_name = azurerm_resource_group.firewall_rg.name
  allocation_method   = "Static"
  sku                 = "Standard"

  tags = var.tags
}

# Firewall Policy
resource "azurerm_firewall_policy" "firewall_policy" {
  name                = var.firewall_policy_name
  resource_group_name = azurerm_resource_group.firewall_rg.name

  tags = var.tags
}

# Firewall Policy Rule Collection Group
resource "azurerm_firewall_policy_rule_collection_group" "firewall_policy_rule_collection_group" {
  name                = "example-rule-collection-group"
  firewall_policy_id  = azurerm_firewall_policy.firewall_policy.id
  priority            = 100

  application_rule_collection {
    name     = "example-app-rule-collection"
    action   = "Allow"
    priority = 200

    rule {
      name             = "allow-web-traffic"
      source_addresses = ["*"]
      destination_fqdns = ["www.example.com"]
      protocols {
        protocol_type = "Http"
        port          = 80
      }
    }
  }

  network_rule_collection {
    name     = "example-net-rule-collection"
    action   = "Allow"
    priority = 300

    rule {
      name                  = "allow-ssh-traffic"
      source_addresses      = ["10.0.0.0/16"]
      destination_addresses = ["*"]
      destination_ports     = ["22"]
      protocols             = ["TCP"]
    }
  }
}

# Attach Firewall Policy to Azure Firewall
resource "azurerm_firewall" "firewall" {
  name                = var.firewall_name
  # Removed unexpected location attribute
  resource_group_name = azurerm_resource_group.firewall_rg.name
  sku_name            = "AZFW_VNet"
  sku_tier            = "Standard"

  ip_configuration {
    name                 = "configuration"
    subnet_id            = azurerm_subnet.subnet_firewall.id
    public_ip_address_id = azurerm_public_ip.pip_firewall.id
  }

  firewall_policy_id = azurerm_firewall_policy.firewall_policy.id

  tags = var.tags
}

# Front Door Firewall Policy
resource "azurerm_frontdoor_firewall_policy" "frontdoor_firewall_policy" {
  name                = var.frontdoor_firewall_policy_name
  resource_group_name = azurerm_resource_group.firewall_rg.name
  location            = azurerm_resource_group.firewall_rg.location

  managed_rule {
    type    = "DefaultRuleSet"
    version = "1.0"
  }

  custom_rule {
    name      = "block-specific-ip"
    priority  = 100
    rule_type = "MatchRule"
    action    = "Block"

    match_condition {
      match_variable   = "RemoteAddr"
      operator         = "IPMatch"
      negate_condition = false
      match_values     = var.match_values
    }
  }

  tags = var.tags
}

# Front Door
resource "azurerm_frontdoor" "frontdoor" {
  name                = "${var.firewall_name}-frontdoor"
  resource_group_name = azurerm_resource_group.firewall_rg.name
  location            = azurerm_resource_group.firewall_rg.location

  routing_rule {
    name               = var.routing_rule_name
    accepted_protocols = ["Https"]
    patterns_to_match  = ["/*"]
    frontend_endpoints = [azurerm_frontdoor_frontend_endpoint.example.name]
    forwarding_configuration {
      backend_pool_name = azurerm_frontdoor_backend_pool.example.name
    }
  }

  backend_pool {
    name = var.backend_pool_name
    backend {
      host_header = "example.com"
      address     = "example.com"
      http_port   = 80
      https_port  = 443
    }

    load_balancing {
      name                     = var.load_balancing_name
      sample_size              = 4
      successful_samples_required = 2
    }

    health_probe {
      name                 = var.health_probe_name
      protocol             = "Https"
      path                 = "/health"
      interval_in_seconds  = 30
    }
  }

  frontend_endpoint {
    name      = var.frontend_endpoint_name
    host_name = "example.azurefd.net"
  }

  tags = var.tags
}

# Associate Front Door Firewall Policy with Front Door
resource "azurerm_frontdoor_firewall_policy_association" "frontdoor_firewall_policy_association" {
  frontdoor_id          = azurerm_frontdoor.frontdoor.id
  frontend_endpoint_ids = [azurerm_frontdoor.frontdoor.frontend_endpoint[0].id]
  firewall_policy_id    = azurerm_frontdoor_firewall_policy.frontdoor_firewall_policy.id
}
